generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

// User model to store authenticated users
model User {
    id        String   @id @default(cuid()) // Unique user ID
    username  String? // Optional: Username of the user
    email     String   @unique // User's email address (used for login)
    name      String? // Optional: Name of the user
    password  String? // Optional: Password
    createdAt DateTime @default(now()) // Timestamp when user was created

    // Relations to OAuthTokens
    accounts Account[] // One user can have many OAuth tokens
}

// Standard Auth.js Account model
model Account {
    id                 String    @id @default(cuid()) // Unique account ID
    userId             String    @unique // User ID from the User model
    providerType       String // OAuth provider name (e.g. "credentials")
    providerId         String // OAuth provider ID (e.g. "1234567890")
    refreshToken       String? // Optional: OAuth refresh token
    accessToken        String? // Optional: OAuth access token
    accessTokenExpires DateTime? // Optional: Timestamp when access token expires
    createdAt          DateTime  @default(now()) // Timestamp when account was created

    // Relations to User
    user User @relation(fields: [userId], references: [id])
}
